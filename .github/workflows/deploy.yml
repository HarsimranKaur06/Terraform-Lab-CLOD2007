name: Terraform Deployment

on:
  push:
    branches:
      - master

jobs:
  step2:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Decode Google Credentials
        run: |
          echo "${{ secrets.GOOGLE_CREDENTIALS_B64 }}" | base64 -d > $HOME/credentials.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=$HOME/credentials.json" >> $GITHUB_ENV

      - name: Terraform Init (Step 2)
        run: terraform init
        working-directory: ./step2

      - name: Taint Resources (Step 2)
        run: |
          terraform taint google_service_account.example || echo "Resource already tainted or does not exist."
        working-directory: ./step2

      - name: Terraform Plan (Step 2)
        id: check_plan_step2
        run: |
          terraform plan -out=tfplan
          echo "exit_code=0" >> $GITHUB_ENV  # Save the exit code to an environment file
        working-directory: ./step2

      - name: Terraform Apply (Step 2)
        run: terraform apply -auto-approve || echo "Resources already exist, but apply still ran."
        working-directory: ./step2

      - name: Terraform Skip Apply (Step 2)
        if: ${{ env.exit_code == '0' }}
        run: echo "Resources already exist, skipping apply."
        working-directory: ./step2

      - name: Terraform Destroy (Step 2)
        if: failure()
        run: terraform destroy -auto-approve
        working-directory: ./step2

  step3:
    runs-on: ubuntu-latest
    needs: step2  

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Decode Google Credentials
        run: |
          echo "${{ secrets.GOOGLE_CREDENTIALS_B64 }}" | base64 -d > $HOME/credentials.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=$HOME/credentials.json" >> $GITHUB_ENV

      - name: Terraform Init (Step 3)
        run: terraform init
        working-directory: ./step3

      - name: Terraform Plan (Step 3)
        id: check_plan_step3
        run: |
          terraform plan -out=tfplan
          echo "exit_code=0" >> $GITHUB_ENV
        working-directory: ./step3

      - name: Terraform Apply (Step 3)
        run: terraform apply -auto-approve
        working-directory: ./step3

      - name: Terraform Skip Apply (Step 3)
        if: ${{ env.exit_code == '0' }}
        run: echo "Resources already exist, skipping apply."
        working-directory: ./step3

      - name: Terraform Destroy (Step 3)
        if: failure()
        run: terraform destroy -auto-approve
        working-directory: ./step3

  cleanup:
    runs-on: ubuntu-latest
    needs: [step2, step3]  

    steps:
      - name: Securely Cleanup Credentials
        if: always()
        run: shred -u $HOME/credentials.json
